# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "vmd" "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
  { 
    device = "/dev/disk/by-uuid/2137dfb6-2636-4862-9a8a-8c65888fe4f3";
    fsType = "ext4";
  };

  fileSystems."/boot" =
  { 
    device = "/dev/disk/by-uuid/DD4E-E92E";
    fsType = "vfat";
  };

  swapDevices =
  [ 
    { device = "/dev/disk/by-uuid/e75335de-515d-4948-9fac-e94c014566ca"; }
  ];

  fileSystems."/home/oliver/DataDrive" =
  {
    device = "/dev/disk/by-uuid/eac303e0-86ec-4f99-8ca8-48a759b9c7a0";
    fsType = "ext4";
  };

  fileSystems."/home/oliver/Games" =
  {
    device = "/dev/disk/by-uuid/33e48f5a-4c40-4f37-b424-000d76b86f30";
    fsType = "ext4";
  };
  
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}